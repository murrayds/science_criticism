from os.path import join as j

from workflow_helpers import get_novelty_null_iters, get_novelty_years, get_venues

# Use a config file
configfile: "config.yaml"

RAW_DIR = j(config["data_dir"], "raw")
DERIVED_DIR = j(config["data_dir"], "derived")
FIG_DIR = j(config["fig_dir"], "figs")

LETTER_METADATA = j(RAW_DIR, "{venue}_letter_metadata.csv")
PAPER_IMPACT = j(RAW_DIR, "dl", "articles", "{venue}_paper_impact.csv")
PAPER_FIELDS = j(RAW_DIR, "dl", "articles", "{venue}_fields.csv")
FIELD_HIERARCHY = j(RAW_DIR, "mag_field_hierarchy.csv")
PAPER_FEATURES = j(RAW_DIR, "paper_features.csv")
#TODO Later this should be integrated in files at query-time
MONTH_OF_PUBLICATION = j(RAW_DIR, "month_of_publication.csv")

JOURNAL_REFS = j(RAW_DIR, "dl", "journal_refs_{year}.csv")
TARGET_JOURNAL_REFS = j(RAW_DIR, "dl", "target_journal_refs.csv")
PAPER_FIELD_REFS = j(RAW_DIR, "dl", "paper_field_refs.csv")
PAPER_FIELD_CITES = j(RAW_DIR, "dl", "paper_field_cites.csv")
CAREER_HISTORIES = j(RAW_DIR, "dl", "career_histories.csv")

AGG_LETTERS = j(DERIVED_DIR, "agg", "agg_letters.csv")
AGG_NONLETTERS = j(DERIVED_DIR, "agg", "agg_nonletters.csv")
AGG_FIELDS = j(DERIVED_DIR, "agg", "agg_fields.csv")

OBSERVED_JOURNAL_COOCCURENCE_COUNTS = j(DERIVED_DIR, "novelty", "observed", "observed_journal_cooccurence_counts_{year}.pickle")
NULL_JOURNAL_COOCCURENCE_COUNTS = j(DERIVED_DIR, "novelty", "null", "null_journal_cooccurence_counts_{year}_iter{iter}.pickle")

AGG_OBSERVED_JOURNAL_COOCCURENCE_COUNTS = j(DERIVED_DIR, "novelty", "observed", "agg_observed_journal_cooccurence_counts.pickle")
AGG_NULL_JOURNAL_COOCCURENCE_COUNTS = j(DERIVED_DIR, "novelty", "null", "agg_null_journal_cooccurence_counts_iter{iter}.pickle")
NOVELTY_ZSCORES = j(DERIVED_DIR, "novelty", "journal_zscores_{year}.pickle")
AGG_NOVELTY_ZSCORES = j(DERIVED_DIR, "novelty", "agg_journal_zscores.pickle")
PAPER_NOVELTY_SCORES = j(DERIVED_DIR, "novelty", "paper_zscores.csv")


MATCHED_PAPERS_FOR_METRIC_DENSITY_COMPARISON = j(DERIVED_DIR, "matched", "matched_papers_metricdensity_{cite_tolerance}impact_{year_tolerance}year.csv")
MATCHED_PAPERS_FOR_IMPACT_COMPARISON = j(DERIVED_DIR, "matched", "matched_papers_stage1_{delay}delay_{cite_tolerance}impact_{year_tolerance}year.csv")
AGG_MATCH_DIAGNOSTICS = j(DERIVED_DIR, "matched", "agg_match_diagnostics.csv")
MATCHED_AUTHORS = j(DERIVED_DIR, "matched", "matched_{authorship}_authors_{cite_tolerance}impact_{prod_tolerance}prod.csv")


IMPACT_RANK_HISTOGRAM = j(FIG_DIR, "impact_rank_histogram.png")
IMPACT_LIKELIHOOD_SCATTER = j(FIG_DIR, "impact_likelihood_scatter.png")

PAPER_METRICS_DENSITY_PLOT = j(FIG_DIR, "paper_metrics_density.png")
PAPER_METRICS_DENSITY_PLOT_TEST_1SAMPLE_TABLE = j(FIG_DIR, "tables", "paper_metrics_density_test_1sample_table.txt")
PAPER_METRICS_DENSITY_PLOT_TEST_2SAMPLE_TABLE = j(FIG_DIR, "tables", "paper_metrics_density_test_2sample_table.txt")

FIT_BY_VENUE_TABLE = j(FIG_DIR, "tables", "fit_by_venue.txt")

POOLED_IMPACT_COMPARISON_PLOT = j(FIG_DIR, "pooled_{lag_subset}_impact_comparison_plot.png")
PAIRWISE_IMPACT_COMPARISON_PLOT = j(FIG_DIR, "pairwise_{lag_subset}_impact_comparison_plot.png")

PAIRWISE_AUTHOR_COMPARISON_PLOT = j(FIG_DIR, "pairwise_author_comparison_{metric}_{authorship}-authors.png")
FIELD_REPRESENTATION_PLOT = j(FIG_DIR, "field_representation_plot.png")

MATCHING_DIAGNOSTIC_IMPACT_PLOT = j(FIG_DIR, "diagnostics", "matching_diagnostic_impact_plot.png")
MATCH_DIAGNOSTICS_TABLE = j(FIG_DIR, "tables", "match_{diagnostic}_parameters.txt")

####################
# INCLUDES
####################
include: "rules/Download.smk"
include: "rules/Novelty.smk"
include: "rules/Process.smk"
include: "rules/Match.smk"
include: "rules/Results.smk"

####################
# PARAMETERS
####################
VENUES = get_venues(config)

# Maybe I can store these in a config file instead...?
IMPACT_DELAY = config["matching"]["impact_delay"]
CITE_TOLERANCE = config["matching"]["cite_tolerance"]
YEAR_TOLERANCE = config["matching"]["year_tolerance"]
PRODUCTIVITY_TOLERANCE = config["matching"]["productivity_tolerance"]

LAG_SUBSET = ["all", "lag0", "lag1plus"]
DIAGNOSTICS = ["counts", "tstats", "wilcox"]

YEARS_OF_STUDY = get_novelty_years(config)
NULL_ITERS = get_novelty_null_iters(config)


AUTHORSHIP = ["first", "last"]
AUTHOR_METRICS = ["frac_prod", "impact_raw"]

rule all:
    input:
        expand(PAPER_IMPACT, venue = VENUES),
        expand(PAPER_FIELDS, venue = VENUES),
        expand(JOURNAL_REFS, year=YEARS_OF_STUDY),
        TARGET_JOURNAL_REFS,
        expand(OBSERVED_JOURNAL_COOCCURENCE_COUNTS, year=YEARS_OF_STUDY),
        expand(NULL_JOURNAL_COOCCURENCE_COUNTS, year=YEARS_OF_STUDY, iter=NULL_ITERS),
        expand(NOVELTY_ZSCORES, year = YEARS_OF_STUDY),
        AGG_NOVELTY_ZSCORES,
        PAPER_NOVELTY_SCORES,
        PAPER_FIELD_REFS,
        PAPER_FIELD_CITES,
        CAREER_HISTORIES,
        IMPACT_RANK_HISTOGRAM,
        IMPACT_LIKELIHOOD_SCATTER,
        expand(
            MATCHED_PAPERS_FOR_IMPACT_COMPARISON,
            delay = IMPACT_DELAY,
            cite_tolerance = CITE_TOLERANCE,
            year_tolerance = YEAR_TOLERANCE
        ),
        expand(
            MATCHED_PAPERS_FOR_METRIC_DENSITY_COMPARISON,
            cite_tolerance = 0.05,
            year_tolerance = 3,
        ),
        expand(
            MATCHED_AUTHORS,
            authorship = AUTHORSHIP,
            cite_tolerance = 0.15,
            prod_tolerance = 0.15
        ),
        PAPER_METRICS_DENSITY_PLOT,
        PAPER_METRICS_DENSITY_PLOT_TEST_1SAMPLE_TABLE,
        PAPER_METRICS_DENSITY_PLOT_TEST_2SAMPLE_TABLE,
        expand(POOLED_IMPACT_COMPARISON_PLOT, lag_subset = LAG_SUBSET),
        expand(PAIRWISE_IMPACT_COMPARISON_PLOT, lag_subset = LAG_SUBSET),
        FIT_BY_VENUE_TABLE,
        AGG_MATCH_DIAGNOSTICS,
        expand(MATCH_DIAGNOSTICS_TABLE, diagnostic=DIAGNOSTICS),
        MATCHING_DIAGNOSTIC_IMPACT_PLOT,
        FIELD_REPRESENTATION_PLOT,
        expand(
            PAIRWISE_AUTHOR_COMPARISON_PLOT,
            metric = AUTHOR_METRICS,
            authorship = AUTHORSHIP
        )

rule download:
    input:
        expand(PAPER_IMPACT, venue = VENUES),
        expand(PAPER_FIELDS, venue = VENUES),
        expand(JOURNAL_REFS, year=YEARS_OF_STUDY),
        TARGET_JOURNAL_REFS,
        CAREER_HISTORIES,
        PAPER_FIELD_REFS,
        PAPER_FIELD_CITES

rule novelty:
    input:
        expand(OBSERVED_JOURNAL_COOCCURENCE_COUNTS, year=YEARS_OF_STUDY),
        expand(NULL_JOURNAL_COOCCURENCE_COUNTS, year=YEARS_OF_STUDY, iter=NULL_ITERS),
        expand(NOVELTY_ZSCORES, year = YEARS_OF_STUDY),
        AGG_NOVELTY_ZSCORES,
        PAPER_NOVELTY_SCORES

rule match:
    input:
        expand(
            MATCHED_PAPERS_FOR_IMPACT_COMPARISON,
            delay = config["matching"]["impact_delay"],
            cite_tolerance = config["matching"]["cite_tolerance"],
            year_tolerance = YEAR_TOLERANCE
        ),
        expand(
            MATCHED_PAPERS_FOR_METRIC_DENSITY_COMPARISON,
            cite_tolerance = 0.05,
            year_tolerance = 3,
        ),
        expand(
            MATCHED_AUTHORS,
            authorship = AUTHORSHIP,
            cite_tolerance = 0.15,
            prod_tolerance = 0.15
        ),
        IMPACT_RANK_HISTOGRAM,
        IMPACT_LIKELIHOOD_SCATTER

rule results:
    input:
        PAPER_METRICS_DENSITY_PLOT,
        PAPER_METRICS_DENSITY_PLOT_TEST_1SAMPLE_TABLE,
        PAPER_METRICS_DENSITY_PLOT_TEST_2SAMPLE_TABLE,
        expand(POOLED_IMPACT_COMPARISON_PLOT, lag_subset = LAG_SUBSET),
        expand(PAIRWISE_IMPACT_COMPARISON_PLOT, lag_subset = LAG_SUBSET),
        FIT_BY_VENUE_TABLE,
        AGG_MATCH_DIAGNOSTICS,
        expand(MATCH_DIAGNOSTICS_TABLE, diagnostic=DIAGNOSTICS),
        MATCHING_DIAGNOSTIC_IMPACT_PLOT,
        FIELD_REPRESENTATION_PLOT,
        expand(
            PAIRWISE_AUTHOR_COMPARISON_PLOT,
            metric = AUTHOR_METRICS,
            authorship = AUTHORSHIP
        )